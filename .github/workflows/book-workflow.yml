name: book workflow
on:
  workflow_dispatch:

  push:
    branches:
      - main
      - feature
  env:
    USERNAME_GITHUB_IMAGE: steve
jobs:
  unit-testing:
    container:
      image: maven:3.9.3-eclipse-temurin-17
    services:
      postgres-db:
        image: postgres:14-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{vars.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{vars.POSTGRES_DB}}
    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-db:5432/${{vars.POSTGRES_DB}}
      SPRING_DATASOURCE_USERNAME: ${{vars.POSTGRES_USER}}
      SPRING_DATASOURCE_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Build and Test
        run: mvn clean test
  test-coverage:
    runs-on: ubuntu-latest
    steps:
      - name: test-coverage
        run: echo test-coverage
  docker-containerization:
    needs:
      - unit-testing
      - test-coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{vars.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{vars.POSTGRES_DB}}
    steps:
      - name: Checkout Repository
        run: uses actions/checkout@v5

      - name: Login to DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{vars.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_PASSWORD}}

      - name: Login to GitHUB
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          password: ${{github.repository_owner}}
          username: ${{secrets.GITHUB_TOKEN}}

      - name: Docker build for testing
        uses: docker/build-push-action@v6
        with:
          push: 'false'
          context: .
          tags: ${{env.USERNAME_GITHUB_IMAGE}}/book:v${{github.run_number}}

      - name: Docker Image test
        run: |
          docker images
          docker run --name book-backend-app -d \
          -p 5051:5051 \
          -e SPRING_DATASOURCE_USERNAME=${{ vars.POSTGRES_USER }} \
          -e SPRING_DATASOURCE_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          -e SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/${{ vars.POSTGRES_DB }} \
          ${{env.USERNAME_GITHUB_IMAGE}}/book:v${{ github.run_number } 
          
          docker ps 
          docker logs book-backend-app
  dev-deploy:
    needs: docker-containerization
    runs-on: ubuntu-latest
    steps:
      - name: kubernetes deploy
        run: echo deploy on kubernetes